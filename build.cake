var target = Argument("target", "Default");

//#addin nuget:?package=Cake.NSwag
#addin nuget:?package=Cake.AutoRest
//#tool nuget:?package=NSwag.MSBuild

Task("Clean")
    .Does(() => {
        CreateDirectory("./artifacts");
        CleanDirectory("./artifacts");
    });

Task("Build-Api")
    .Does(() => {

        CreateDirectory("./artifacts");
        CleanDirectory("./artifacts");

        var settings = new DotNetCoreBuildSettings
        {
            Framework = "netcoreapp1.1",
            Configuration = "Release",
            OutputDirectory = "./artifacts/"
        };

        DotNetCoreBuild("./src/MetaFactory", settings);
    });

Task("Generate-Client")
    .IsDependentOn("Clean")
    .IsDependentOn("Build-Api")
    .Does(() => {


        var path = MakeAbsolute(File("./artifacts/swagger.json"));

        Information("Trying to generate " + path);

        StartProcess("dotnet", new ProcessSettings() {
            Arguments = "run generate http://localhost:5000/swagger/v1/swagger.json " + path,
            WorkingDirectory = "./src/MetaFactory"
        });

        var settings = new AutoRestSettings {
            Namespace = "MetaFactory.Client",
            Generator = CodeGenerator.CSharp,
            ClientName = "MetaFactoryClient",
            HeaderComment = "Generated by Cake.AutoRest",
            OutputDirectory = "./src/Metafactory.Client"
        };

        AutoRest.Generate(path, settings);

    });

Task("Build-Client")
    //.IsDependentOn("Generate-Client")
    .Does(() => {

        var settings = new DotNetCoreBuildSettings
        {
            Framework = ".NETStandard,Version=v1.2",
            Configuration = "Release",
            OutputDirectory = "./artifacts/"
        };

        DotNetCoreBuild("./src/MetaFactory.Client", settings);
    });

Task("Default")
    .IsDependentOn("Build-Client");

RunTarget(target);
